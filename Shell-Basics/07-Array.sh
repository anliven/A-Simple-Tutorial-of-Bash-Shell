#! /usr/bin/bash

test0=() # 定义数组

test1=(a b c) # 定义数组

test2=( # 定义数组
'A?'
"BB!"
CCC
)

test1[0]=0 # 单独定义数组的元素，重定义元素
test1[1]=1
test1[2]=2
test1[3]=d # 单独定义数组的元素，添加元素
test1[6]=6 # 可以不使用连续的下标，而且下标的范围没有限制

echo 'test1[0]: ' ${test1[0]} # 读取数组中的单个元素
echo 'test1[6]: ' ${test1[6]} 
echo 'test0[@]: ' ${test0[@]} # 使用@符号读取数组中的所有元素
echo 'test1[@]: ' ${test1[@]}
echo 'test2[@]: ' ${test2[@]}

length0=${#test0[@]} # 取得数组元素的个数
echo "数组test0元素的个数为：" $length0
length1=${#test1[*]} # 取得数组元素的个数
echo "数组test1元素的个数为：" $length1
length2=${#test2[2]} # 取得数组单个元素的长度
echo "数组test2中下标为2的元素长度为：" $length2





#   ### 定义数组
#   - Bash Shell只支持一维数组，没有限定数组的大小；
#   - 用括号来表示数组，元素用"空格"符号分割开，定义形式为“数组名=(值1 值2 ... 值n)”;
#   
#   
#   ### 读取数组
#   - 数组元素的下标由0开始编号，利用下标读取数组中的元素，读取形式为“${数组名[下标]}”；
#   - 数组的下标可以是整数或算术表达式，其值大于或等于0；
#   - 使用@符号可以读取数组中的所有元素，读取形式为“${数组名[@]}”；
#   
#   
#   ### 获取数组元素的个数
#   - 获取数组元素的个数的方法与获取字符串长度的方法相同